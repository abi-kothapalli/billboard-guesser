[{"/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/index.js":"1","/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/reportWebVitals.js":"2","/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/App.js":"3","/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/components/navbar.jsx":"4","/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/components/songPanel.jsx":"5","/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/components/songDashboard.jsx":"6","/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/components/loading.jsx":"7"},{"size":377,"mtime":1632189044961,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1631986295341,"results":"10","hashOfConfig":"9"},{"size":8566,"mtime":1632469234480,"results":"11","hashOfConfig":"9"},{"size":19502,"mtime":1632468603363,"results":"12","hashOfConfig":"9"},{"size":2270,"mtime":1632186859901,"results":"13","hashOfConfig":"9"},{"size":7669,"mtime":1632465530806,"results":"14","hashOfConfig":"9"},{"size":3920,"mtime":1632442435836,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"crvovv",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/index.js",[],["32","33"],"/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/reportWebVitals.js",[],"/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/App.js",[],"/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/components/navbar.jsx",["34","35","36","37"],"import React, { Component } from \"react\";\n\nclass NavBar extends Component {\n    formatStats = (current, type) => {\n        if (current) {\n            if (this.props.runStats) {\n                const { totalCorrect, totalGuesses, difficultySum } =\n                    this.props.runStats;\n\n                if (type === 0) {\n                    return totalCorrect;\n                } else if (type === 1) {\n                    return totalGuesses;\n                } else {\n                    if (totalGuesses === 0) {\n                        return this.props.songDifficulty;\n                    } else {\n                        const avg = difficultySum / totalGuesses;\n                        return (Math.round(avg * 100) / 100).toFixed(2);\n                    }\n                }\n            } else {\n                return \"Loading...\";\n            }\n        } else {\n            if (this.props.allStats) {\n                const { totalCorrect, totalGuesses, difficultySum } =\n                    this.props.allStats;\n\n                if (type === 0) {\n                    return totalCorrect;\n                } else if (type === 1) {\n                    return totalGuesses;\n                } else {\n                    if (totalGuesses === 0) {\n                        return this.props.songDifficulty;\n                    } else {\n                        const avg = difficultySum / totalGuesses;\n                        return (Math.round(avg * 100) / 100).toFixed(2);\n                    }\n                }\n            } else {\n                return \"Loading...\";\n            }\n        }\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <nav className=\"shadow-sm navbar navbar-expand-lg navbar-light bg-light\">\n                    <div className=\"container-fluid mx-auto\">\n                        <a\n                            className=\"navbar-brand\"\n                            style={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"flex-start\",\n                            }}\n                            href=\"#\"\n                        >\n                            <img\n                                src=\"favicon144.png\"\n                                alt=\"\"\n                                width=\"30\"\n                                className=\"logo pull-left d-inline-block align-text-top mx-2\"\n                            />\n                            Billboard Guesser Game\n                        </a>\n                        <div className=\"mr-auto\">\n                            <button\n                                type=\"button\"\n                                tabIndex=\"-1\"\n                                className=\"btn btn-primary btn-sm\"\n                                disabled\n                            >\n                                Current Score: {this.props.currScore}\n                            </button>\n                        </div>\n                        <div className=\"dropdown navbar-text\">\n                            <button\n                                type=\"button\"\n                                tabIndex=\"-1\"\n                                className=\"btn btn-danger btn-sm mx-2\"\n                                disabled\n                            >\n                                High Score: {this.props.highScore}\n                            </button>\n\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-sm btn-dark dropdown-toggle\"\n                                data-toggle=\"dropdown\"\n                                aria-haspopup=\"true\"\n                                aria-expanded=\"false\"\n                            >\n                                <span className=\"fa fa-gear fa-lg\" />\n                            </button>\n\n                            <div\n                                style={{ textAlign: \"center\", width: 200 }}\n                                className=\"dropdown-menu dropdown-menu-right\"\n                            >\n                                <span>\n                                    <button\n                                        className=\"btn btn-secondary btn-sm\"\n                                        onClick={() =>\n                                            this.props.onDifficulty(-1)\n                                        }\n                                        disabled={this.props.songDifficulty < 3}\n                                    >\n                                        <span className=\"fa fa-minus fa-sm\" />\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        tabIndex=\"-1\"\n                                        className=\"btn btn-outline-dark btn-sm mx-2\"\n                                        disabled\n                                    >\n                                        Songs: {this.props.songDifficulty}\n                                    </button>\n                                    <button\n                                        className=\"btn btn-secondary btn-sm\"\n                                        onClick={() =>\n                                            this.props.onDifficulty(1)\n                                        }\n                                        disabled={this.props.songDifficulty > 9}\n                                    >\n                                        <span className=\"fa fa-plus fa-sm\" />\n                                    </button>\n                                </span>\n                                <div className=\"dropdown-divider\"></div>\n                                <a\n                                    className=\"dropdown-item btn-info\"\n                                    id=\"infoBtn\"\n                                    href=\"#\"\n                                    data-toggle=\"modal\"\n                                    data-target=\"#infoModal\"\n                                >\n                                    <span className=\"fa fa-info-circle\" /> Game\n                                    Rules\n                                </a>\n                                <div className=\"dropdown-divider\"></div>\n                                <a\n                                    className=\"dropdown-item btn-primary\"\n                                    id=\"statsBtn\"\n                                    href=\"#\"\n                                    data-toggle=\"modal\"\n                                    data-target=\"#statsModal\"\n                                >\n                                    <span className=\"fa fa-bar-chart\" /> Player\n                                    Stats\n                                </a>\n                                <div className=\"dropdown-divider\"></div>\n                                <a\n                                    className=\"dropdown-item btn-danger\"\n                                    id=\"resetBtn\"\n                                    href=\"#\"\n                                    onClick={this.props.onReset}\n                                >\n                                    <span className=\"fa fa-rotate-right\" />\n                                    {\"\\t\"}Reset\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </nav>\n\n                <div\n                    className=\"modal fade\"\n                    id=\"infoModal\"\n                    data-backdrop=\"static\"\n                    data-keyboard=\"false\"\n                    tabIndex=\"-1\"\n                    aria-labelledby=\"staticBackdropLabel\"\n                    aria-hidden=\"true\"\n                >\n                    <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5\n                                    className=\"modal-title\"\n                                    id=\"staticBackdropLabel\"\n                                    style={{ color: \"#5bc0de\" }}\n                                >\n                                    Welcome to (the amazingly named) Billboard\n                                    Guesser Game!\n                                </h5>\n                                <button\n                                    type=\"button\"\n                                    className=\"close\"\n                                    data-dismiss=\"modal\"\n                                    aria-label=\"Close\"\n                                >\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body\">\n                                You will be shown a random selection of songs\n                                from the Billboard Hot 100 Chart. Your objective\n                                is to put the songs in the same order that they\n                                appear on the Hot 100 Chart. <br /> <br />\n                                Use the\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-primary btn-sm mx-1\"\n                                >\n                                    Arrows <span className=\"fa fa-arrow-up\" />{\" \"}\n                                    <span className=\"fa fa-arrow-down\" />\n                                </button>\n                                on each song to put the songs in the order you\n                                would like, and then use the{\" \"}\n                                <button className=\"btn btn-success btn-sm mx-1\">\n                                    Guess!\n                                </button>{\" \"}\n                                button at the bottom of the page when you think\n                                you have the right order. Your{\" \"}\n                                <button\n                                    type=\"button\"\n                                    tabIndex=\"-1\"\n                                    className=\"btn btn-primary btn-sm mx-1\"\n                                    disabled\n                                >\n                                    Current Score\n                                </button>{\" \"}\n                                and{\" \"}\n                                <button\n                                    type=\"button\"\n                                    tabIndex=\"-1\"\n                                    className=\"btn btn-danger btn-sm mx-1\"\n                                    disabled\n                                >\n                                    High Score\n                                </button>{\" \"}\n                                will be displayed at the top of the screen.\n                                <br />\n                                <br />\n                                You can increase the difficulty of the game by\n                                using the{\" \"}\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-sm btn-dark mx-1\"\n                                >\n                                    Settings{\" \"}\n                                    <span className=\"fa fa-gear fa-lg\" />\n                                </button>{\" \"}\n                                menu in the top right corner of the screen. You\n                                can also refer back to these{\" \"}\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-sm btn-info mx-1\"\n                                >\n                                    <span className=\"fa fa-info-circle\" /> Game\n                                    Rules\n                                </button>{\" \"}\n                                again in this menu if you wish. You will also\n                                find your current and all time{\" \"}\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-sm btn-primary mx-1\"\n                                >\n                                    <span className=\"fa fa-bar-chart\" /> Player\n                                    Stats\n                                </button>{\" \"}\n                                in this menu. <br />\n                                <br />\n                                If at any point you would like to reset the game\n                                to a clean slate, you can use the{\" \"}\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-sm btn-danger mx-1\"\n                                >\n                                    <span className=\"fa fa-rotate-right\" />\n                                    {\"\\t\"}Reset\n                                </button>{\" \"}\n                                button in the{\" \"}\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-sm btn-dark mx-1\"\n                                >\n                                    Settings{\" \"}\n                                    <span className=\"fa fa-gear fa-lg\" />\n                                </button>{\" \"}\n                                menu.{\" \"}\n                                <strong style={{ color: \"#d9534f\" }}>\n                                    Use this button with caution, as it cannot\n                                    be undone.\n                                </strong>\n                                <br />\n                                <br />\n                                <strong style={{ color: \"#5bc0de\" }}>\n                                    {\" \"}\n                                    Good luck!{\" \"}\n                                </strong>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-info\"\n                                    data-dismiss=\"modal\"\n                                >\n                                    Continue\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div\n                    className=\"modal fade\"\n                    id=\"statsModal\"\n                    data-backdrop=\"static\"\n                    data-keyboard=\"false\"\n                    tabIndex=\"-1\"\n                    aria-labelledby=\"staticBackdropLabel\"\n                    aria-hidden=\"true\"\n                >\n                    <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5\n                                    className=\"modal-title\"\n                                    id=\"staticBackdropLabel\"\n                                    style={{ color: \"#0275d8\" }}\n                                >\n                                    Player Statistics\n                                </h5>\n                                <button\n                                    type=\"button\"\n                                    className=\"close\"\n                                    data-dismiss=\"modal\"\n                                    aria-label=\"Close\"\n                                >\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <strong>Current Game Statistics:</strong>\n                                <ul>\n                                    <li>\n                                        Total{\" \"}\n                                        <span style={{ color: \"#5cb85c\" }}>\n                                            Correct\n                                        </span>{\" \"}\n                                        Guesses: {this.formatStats(true, 0)}\n                                    </li>\n                                    <li>\n                                        Total{\" \"}\n                                        <span style={{ color: \"#f0ad4e\" }}>\n                                            Attempted\n                                        </span>{\" \"}\n                                        Guesses: {this.formatStats(true, 1)}\n                                    </li>\n                                    <li>\n                                        Average{\" \"}\n                                        <span style={{ color: \"#d9534f\" }}>\n                                            Song Difficulty\n                                        </span>{\" \"}\n                                        Count: {this.formatStats(true, 2)}\n                                    </li>\n                                </ul>\n                                <hr />\n                                <strong>All Time Statistics:</strong>\n                                <ul>\n                                    <li>\n                                        Total{\" \"}\n                                        <span style={{ color: \"#5cb85c\" }}>\n                                            Correct\n                                        </span>{\" \"}\n                                        Guesses: {this.formatStats(false, 0)}\n                                    </li>\n                                    <li>\n                                        Total{\" \"}\n                                        <span style={{ color: \"#f0ad4e\" }}>\n                                            Attempted\n                                        </span>{\" \"}\n                                        Guesses: {this.formatStats(false, 1)}\n                                    </li>\n                                    <li>\n                                        Average{\" \"}\n                                        <span style={{ color: \"#d9534f\" }}>\n                                            Song Difficulty\n                                        </span>{\" \"}\n                                        Count: {this.formatStats(false, 2)}\n                                    </li>\n                                </ul>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-primary\"\n                                    data-dismiss=\"modal\"\n                                >\n                                    Continue\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default NavBar;\n","/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/components/songPanel.jsx",[],"/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/components/songDashboard.jsx",[],"/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/components/loading.jsx",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":53,"column":25,"nodeType":"44","endLine":61,"endColumn":26},{"ruleId":"42","severity":1,"message":"43","line":133,"column":33,"nodeType":"44","endLine":139,"endColumn":34},{"ruleId":"42","severity":1,"message":"43","line":144,"column":33,"nodeType":"44","endLine":150,"endColumn":34},{"ruleId":"42","severity":1,"message":"43","line":155,"column":33,"nodeType":"44","endLine":160,"endColumn":34},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]