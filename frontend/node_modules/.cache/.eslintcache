[{"/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/index.js":"1","/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/reportWebVitals.js":"2","/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/App.js":"3","/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/components/navbar.jsx":"4","/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/components/songPanel.jsx":"5","/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/components/songDashboard.jsx":"6","/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/components/loading.jsx":"7","/Users/akothapalli/Documents/ChangePlusPlus/public/billboard-guesser/frontend/src/index.js":"8","/Users/akothapalli/Documents/ChangePlusPlus/public/billboard-guesser/frontend/src/reportWebVitals.js":"9","/Users/akothapalli/Documents/ChangePlusPlus/public/billboard-guesser/frontend/src/App.js":"10","/Users/akothapalli/Documents/ChangePlusPlus/public/billboard-guesser/frontend/src/components/loading.jsx":"11","/Users/akothapalli/Documents/ChangePlusPlus/public/billboard-guesser/frontend/src/components/songDashboard.jsx":"12","/Users/akothapalli/Documents/ChangePlusPlus/public/billboard-guesser/frontend/src/components/navbar.jsx":"13","/Users/akothapalli/Documents/ChangePlusPlus/public/billboard-guesser/frontend/src/components/songPanel.jsx":"14"},{"size":480,"mtime":1632509736716,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1631986295341,"results":"17","hashOfConfig":"16"},{"size":16539,"mtime":1632530080466,"results":"18","hashOfConfig":"16"},{"size":21551,"mtime":1632531748043,"results":"19","hashOfConfig":"16"},{"size":3016,"mtime":1632532041662,"results":"20","hashOfConfig":"16"},{"size":11630,"mtime":1632531848968,"results":"21","hashOfConfig":"16"},{"size":6055,"mtime":1632520021967,"results":"22","hashOfConfig":"16"},{"size":480,"mtime":1632873349249,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1632873349249,"results":"25","hashOfConfig":"24"},{"size":16539,"mtime":1632873349248,"results":"26","hashOfConfig":"24"},{"size":6055,"mtime":1632873349248,"results":"27","hashOfConfig":"24"},{"size":11630,"mtime":1632873349249,"results":"28","hashOfConfig":"24"},{"size":21551,"mtime":1632873349249,"results":"29","hashOfConfig":"24"},{"size":3016,"mtime":1632873349249,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"crvovv",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2hoyf4",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/index.js",[],["61","62"],"/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/reportWebVitals.js",[],"/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/App.js",[],"/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/components/navbar.jsx",["63","64","65","66"],"import React, { Component } from \"react\";\n\nclass NavBar extends Component {\n    /**\n     * @brief                       Gets neccessary statistic to load into Player Stats menu\n     * @details                     Based on statistic type (current or not current) and type (total guesses,\n     *                              total correct, or average difficulty), returns the correct statistic\n     *\n     * @param {boolean} current     current === true means trying to get stats for current game,\n     *                              current === false means trying to get all time stats\n     * @param {int} type            type === 0 means trying to get total correct guesses\n     *                              type === 1 means trying to get total number of guesses\n     *                              type === 2 means trying to get average song difficulty\n     * @returns                     Returns appropriate statistic based on parameters\n     */\n    formatStats = (current, type) => {\n        if (current) {\n            if (this.props.runStats) {\n                const { totalCorrect, totalGuesses, difficultySum } =\n                    this.props.runStats;\n\n                if (type === 0) {\n                    return totalCorrect;\n                } else if (type === 1) {\n                    return totalGuesses;\n                } else {\n                    if (totalGuesses === 0) {\n                        return this.props.songDifficulty;\n                    } else {\n                        const avg = difficultySum / totalGuesses;\n                        // Round avg to 2 decimal places\n                        return (Math.round(avg * 100) / 100).toFixed(2);\n                    }\n                }\n            } else {\n                return \"Loading...\";\n            }\n        } else {\n            if (this.props.allStats) {\n                const { totalCorrect, totalGuesses, difficultySum } =\n                    this.props.allStats;\n\n                if (type === 0) {\n                    return totalCorrect;\n                } else if (type === 1) {\n                    return totalGuesses;\n                } else {\n                    if (totalGuesses === 0) {\n                        return this.props.songDifficulty;\n                    } else {\n                        const avg = difficultySum / totalGuesses;\n                        // Round avg to 2 decimal places\n                        return (Math.round(avg * 100) / 100).toFixed(2);\n                    }\n                }\n            } else {\n                return \"Loading...\";\n            }\n        }\n    };\n\n    /**\n     * @brief           Render function for NavBar component\n     * @details         Render function for NavBar that displays logo/title, current and\n     *                  high scores, and the settings menu (which contains the menu to change\n     *                  difficulty, see the game rules, get player statistics, and reset the game)\n     *\n     * @returns         NavBar component\n     */\n    render() {\n        return (\n            <React.Fragment>\n                <nav className=\"shadow-sm navbar navbar-expand-lg navbar-light bg-light\">\n                    <div className=\"container-fluid mx-auto\">\n                        {/* Logo and Title */}\n                        <a\n                            className=\"navbar-brand\"\n                            style={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"flex-start\",\n                            }}\n                            href=\"#\"\n                        >\n                            <img\n                                src=\"favicon144.png\"\n                                alt=\"\"\n                                width=\"30\"\n                                className=\"logo pull-left d-inline-block align-text-top mx-2\"\n                            />\n                            Billboard Guesser Game\n                        </a>\n\n                        {/* Current score display */}\n                        <div className=\"mr-auto\">\n                            <button\n                                type=\"button\"\n                                tabIndex=\"-1\"\n                                className=\"btn btn-primary btn-sm\"\n                                disabled\n                            >\n                                Current Score: {this.props.currScore}\n                            </button>\n                        </div>\n\n                        <div className=\"dropdown navbar-text\">\n                            {/* High score display */}\n                            <button\n                                type=\"button\"\n                                tabIndex=\"-1\"\n                                className=\"btn btn-danger btn-sm mx-2\"\n                                disabled\n                            >\n                                High Score: {this.props.highScore}\n                            </button>\n\n                            {/* Settings menu */}\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-sm btn-dark dropdown-toggle\"\n                                data-toggle=\"dropdown\"\n                                aria-haspopup=\"true\"\n                                aria-expanded=\"false\"\n                            >\n                                <span className=\"fa fa-gear fa-lg\" />\n                            </button>\n\n                            {/* Dropdown menu that displays when settings menu is clicked */}\n                            <div\n                                style={{ textAlign: \"center\", width: 200 }}\n                                className=\"dropdown-menu dropdown-menu-right\"\n                            >\n                                {/* Menu to change difficulty */}\n                                <span>\n                                    <button\n                                        className=\"btn btn-secondary btn-sm\"\n                                        onClick={() =>\n                                            this.props.onDifficulty(-1)\n                                        }\n                                        disabled={this.props.songDifficulty < 3}\n                                    >\n                                        <span className=\"fa fa-minus fa-sm\" />\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        tabIndex=\"-1\"\n                                        className=\"btn btn-outline-dark btn-sm mx-2\"\n                                        disabled\n                                    >\n                                        Songs: {this.props.songDifficulty}\n                                    </button>\n                                    <button\n                                        className=\"btn btn-secondary btn-sm\"\n                                        onClick={() =>\n                                            this.props.onDifficulty(1)\n                                        }\n                                        disabled={this.props.songDifficulty > 9}\n                                    >\n                                        <span className=\"fa fa-plus fa-sm\" />\n                                    </button>\n                                </span>\n                                <div className=\"dropdown-divider\"></div>\n\n                                {/* Game rules button */}\n                                <a\n                                    className=\"dropdown-item btn-info\"\n                                    id=\"infoBtn\"\n                                    href=\"#\"\n                                    data-toggle=\"modal\"\n                                    data-target=\"#infoModal\"\n                                >\n                                    <span className=\"fa fa-info-circle\" /> Game\n                                    Rules\n                                </a>\n                                <div className=\"dropdown-divider\"></div>\n\n                                {/* Player stats button */}\n                                <a\n                                    className=\"dropdown-item btn-primary\"\n                                    id=\"statsBtn\"\n                                    href=\"#\"\n                                    data-toggle=\"modal\"\n                                    data-target=\"#statsModal\"\n                                >\n                                    <span className=\"fa fa-bar-chart\" /> Player\n                                    Stats\n                                </a>\n                                <div className=\"dropdown-divider\"></div>\n\n                                {/* Reset button */}\n                                <a\n                                    className=\"dropdown-item btn-danger\"\n                                    id=\"resetBtn\"\n                                    href=\"#\"\n                                    onClick={this.props.onReset}\n                                >\n                                    <span className=\"fa fa-rotate-right\" />\n                                    {\"\\t\"}Reset\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </nav>\n\n                {/* Modal that displays game rules */}\n                <div\n                    className=\"modal fade\"\n                    id=\"infoModal\"\n                    data-backdrop=\"static\"\n                    data-keyboard=\"false\"\n                    tabIndex=\"-1\"\n                    aria-labelledby=\"staticBackdropLabel\"\n                    aria-hidden=\"true\"\n                >\n                    <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5\n                                    className=\"modal-title\"\n                                    id=\"staticBackdropLabel\"\n                                    style={{ color: \"#5bc0de\" }}\n                                >\n                                    Welcome to (the amazingly named) Billboard\n                                    Guesser Game!\n                                </h5>\n                                <button\n                                    type=\"button\"\n                                    className=\"close\"\n                                    data-dismiss=\"modal\"\n                                    aria-label=\"Close\"\n                                >\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body\">\n                                You will be shown a random selection of songs\n                                from the Billboard Hot 100 Chart. Your objective\n                                is to put the songs in the same order that they\n                                appear on the Hot 100 Chart. <br /> <br />\n                                Use the\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-primary btn-sm mx-1\"\n                                >\n                                    Arrows <span className=\"fa fa-arrow-up\" />{\" \"}\n                                    <span className=\"fa fa-arrow-down\" />\n                                </button>\n                                on each song to put the songs in the order you\n                                would like, and then use the{\" \"}\n                                <button className=\"btn btn-success btn-sm mx-1\">\n                                    Guess!\n                                </button>{\" \"}\n                                button at the bottom of the page when you think\n                                you have the right order. Your{\" \"}\n                                <button\n                                    type=\"button\"\n                                    tabIndex=\"-1\"\n                                    className=\"btn btn-primary btn-sm mx-1\"\n                                    disabled\n                                >\n                                    Current Score\n                                </button>{\" \"}\n                                and{\" \"}\n                                <button\n                                    type=\"button\"\n                                    tabIndex=\"-1\"\n                                    className=\"btn btn-danger btn-sm mx-1\"\n                                    disabled\n                                >\n                                    High Score\n                                </button>{\" \"}\n                                will be displayed at the top of the screen.\n                                <br />\n                                <br />\n                                You can increase the difficulty of the game by\n                                using the{\" \"}\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-sm btn-dark mx-1\"\n                                >\n                                    Settings{\" \"}\n                                    <span className=\"fa fa-gear fa-lg\" />\n                                </button>{\" \"}\n                                menu in the top right corner of the screen. You\n                                can also refer back to these{\" \"}\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-sm btn-info mx-1\"\n                                >\n                                    <span className=\"fa fa-info-circle\" /> Game\n                                    Rules\n                                </button>{\" \"}\n                                again in this menu if you wish. You will also\n                                find your current and all time{\" \"}\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-sm btn-primary mx-1\"\n                                >\n                                    <span className=\"fa fa-bar-chart\" /> Player\n                                    Stats\n                                </button>{\" \"}\n                                in this menu. <br />\n                                <br />\n                                If at any point you would like to reset the game\n                                to a clean slate, you can use the{\" \"}\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-sm btn-danger mx-1\"\n                                >\n                                    <span className=\"fa fa-rotate-right\" />\n                                    {\"\\t\"}Reset\n                                </button>{\" \"}\n                                button in the{\" \"}\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-sm btn-dark mx-1\"\n                                >\n                                    Settings{\" \"}\n                                    <span className=\"fa fa-gear fa-lg\" />\n                                </button>{\" \"}\n                                menu.{\" \"}\n                                <strong style={{ color: \"#d9534f\" }}>\n                                    Use this button with caution, as it cannot\n                                    be undone.\n                                </strong>\n                                <br />\n                                <br />\n                                <strong style={{ color: \"#5bc0de\" }}>\n                                    {\" \"}\n                                    Good luck!{\" \"}\n                                </strong>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-info\"\n                                    data-dismiss=\"modal\"\n                                >\n                                    Continue\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Modal that displays player stats */}\n                <div\n                    className=\"modal fade\"\n                    id=\"statsModal\"\n                    data-backdrop=\"static\"\n                    data-keyboard=\"false\"\n                    tabIndex=\"-1\"\n                    aria-labelledby=\"staticBackdropLabel\"\n                    aria-hidden=\"true\"\n                >\n                    <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5\n                                    className=\"modal-title\"\n                                    id=\"staticBackdropLabel\"\n                                    style={{ color: \"#0275d8\" }}\n                                >\n                                    Player Statistics\n                                </h5>\n                                <button\n                                    type=\"button\"\n                                    className=\"close\"\n                                    data-dismiss=\"modal\"\n                                    aria-label=\"Close\"\n                                >\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <strong>Current Game Statistics:</strong>\n                                <ul>\n                                    <li>\n                                        Total{\" \"}\n                                        <span style={{ color: \"#5cb85c\" }}>\n                                            Correct\n                                        </span>{\" \"}\n                                        Guesses: {this.formatStats(true, 0)}\n                                    </li>\n                                    <li>\n                                        Total{\" \"}\n                                        <span style={{ color: \"#f0ad4e\" }}>\n                                            Attempted\n                                        </span>{\" \"}\n                                        Guesses: {this.formatStats(true, 1)}\n                                    </li>\n                                    <li>\n                                        Average{\" \"}\n                                        <span style={{ color: \"#d9534f\" }}>\n                                            Song Difficulty\n                                        </span>{\" \"}\n                                        Count: {this.formatStats(true, 2)}\n                                    </li>\n                                </ul>\n                                <hr />\n                                <strong>All Time Statistics:</strong>\n                                <ul>\n                                    <li>\n                                        Total{\" \"}\n                                        <span style={{ color: \"#5cb85c\" }}>\n                                            Correct\n                                        </span>{\" \"}\n                                        Guesses: {this.formatStats(false, 0)}\n                                    </li>\n                                    <li>\n                                        Total{\" \"}\n                                        <span style={{ color: \"#f0ad4e\" }}>\n                                            Attempted\n                                        </span>{\" \"}\n                                        Guesses: {this.formatStats(false, 1)}\n                                    </li>\n                                    <li>\n                                        Average{\" \"}\n                                        <span style={{ color: \"#d9534f\" }}>\n                                            Song Difficulty\n                                        </span>{\" \"}\n                                        Count: {this.formatStats(false, 2)}\n                                    </li>\n                                </ul>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-primary\"\n                                    data-dismiss=\"modal\"\n                                >\n                                    Continue\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default NavBar;\n","/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/components/songPanel.jsx",[],"/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/components/songDashboard.jsx",[],"/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/components/loading.jsx",[],"/Users/akothapalli/Documents/ChangePlusPlus/public/billboard-guesser/frontend/src/index.js",[],"/Users/akothapalli/Documents/ChangePlusPlus/public/billboard-guesser/frontend/src/reportWebVitals.js",[],"/Users/akothapalli/Documents/ChangePlusPlus/public/billboard-guesser/frontend/src/App.js",[],"/Users/akothapalli/Documents/ChangePlusPlus/public/billboard-guesser/frontend/src/components/loading.jsx",[],"/Users/akothapalli/Documents/ChangePlusPlus/public/billboard-guesser/frontend/src/components/songDashboard.jsx",[],"/Users/akothapalli/Documents/ChangePlusPlus/public/billboard-guesser/frontend/src/components/navbar.jsx",["67","68","69","70"],"/Users/akothapalli/Documents/ChangePlusPlus/public/billboard-guesser/frontend/src/components/songPanel.jsx",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":76,"column":25,"nodeType":"77","endLine":84,"endColumn":26},{"ruleId":"75","severity":1,"message":"76","line":165,"column":33,"nodeType":"77","endLine":171,"endColumn":34},{"ruleId":"75","severity":1,"message":"76","line":178,"column":33,"nodeType":"77","endLine":184,"endColumn":34},{"ruleId":"75","severity":1,"message":"76","line":191,"column":33,"nodeType":"77","endLine":196,"endColumn":34},{"ruleId":"75","severity":1,"message":"76","line":76,"column":25,"nodeType":"77","endLine":84,"endColumn":26},{"ruleId":"75","severity":1,"message":"76","line":165,"column":33,"nodeType":"77","endLine":171,"endColumn":34},{"ruleId":"75","severity":1,"message":"76","line":178,"column":33,"nodeType":"77","endLine":184,"endColumn":34},{"ruleId":"75","severity":1,"message":"76","line":191,"column":33,"nodeType":"77","endLine":196,"endColumn":34},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]