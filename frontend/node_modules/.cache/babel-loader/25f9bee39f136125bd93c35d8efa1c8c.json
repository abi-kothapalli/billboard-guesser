{"ast":null,"code":"var _jsxFileName = \"/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport NavBar from \"./components/navbar\";\nimport Loading from \"./components/loading\";\nimport SongDashboard from \"./components/songDashboard\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      backendActive: false,\n      backendReady: false,\n      songDifficulty: 3,\n      currScore: 0,\n      highScore: 0,\n      panels: [{\n        title: \"Way 2 Sexy\",\n        artist: \"Drake Featuring Future & Young Thug\",\n        picture: \"https://charts-static.billboard.com/img/2021/09/drake-p3d-way-2-sexy-hhn-155x155.jpg\",\n        first: true,\n        last: false\n      }, {\n        title: \"Bad Habits\",\n        artist: \"Ed Sheeran\",\n        picture: \"https://charts-static.billboard.com/img/2021/07/ed-sheeran-tiy-bad-habits-fce-155x155.jpg\",\n        first: false,\n        last: false\n      }, {\n        title: \"Stay\",\n        artist: \"The Kid LAROI & Justin Bieber\",\n        picture: \"https://charts-static.billboard.com/img/2021/07/the-kid-laroi-qev-stay-ens-155x155.jpg\",\n        first: false,\n        last: true\n      }],\n      songBank: [],\n      orderedSongIndices: []\n    };\n\n    this.handleDifficulty = delta => {\n      const songDifficulty = this.state.songDifficulty + delta;\n      this.setState({\n        songDifficulty\n      });\n    };\n\n    this.handleMove = (song, up) => {\n      console.log(\"Detected\");\n      let newPanels = [...this.state.panels];\n      const idx = newPanels.indexOf(song);\n\n      if (up) {\n        newPanels[idx - 1] = { ...song\n        };\n        newPanels[idx] = { ...this.state.panels[idx - 1]\n        };\n\n        if (idx === 1) {\n          newPanels[idx - 1].first = true;\n          newPanels[idx].first = false;\n        }\n\n        if (idx === newPanels.length - 1) {\n          newPanels[idx - 1].last = false;\n          newPanels[idx].last = true;\n        }\n      } else {\n        newPanels[idx + 1] = { ...song\n        };\n        newPanels[idx] = { ...this.state.panels[idx + 1]\n        };\n\n        if (idx === 0) {\n          newPanels[idx + 1].first = false;\n          newPanels[idx].first = true;\n        }\n\n        if (idx === newPanels.length - 2) {\n          newPanels[idx + 1].last = true;\n          newPanels[idx].last = false;\n        }\n      }\n\n      this.setState({\n        panels: newPanels\n      });\n    };\n\n    this.handleReset = () => {\n      const songDifficulty = 3;\n      const currScore = 0;\n      const highScore = 0;\n      this.setState({\n        songDifficulty,\n        currScore,\n        highScore\n      });\n    };\n\n    this.handleSongLoad = () => {\n      // Randomize song list\n      // Add panel for first {songDifficulty} songs\n      // Update state\n      let songIndices = [...Array(100)].fill().map((_, index) => index);\n      let orderedSongIndices = this.shuffleIndices(songIndices);\n      console.log(songIndices);\n      let panels = [];\n\n      for (let i = 0; i < this.state.songDifficulty; i++) {\n        panels.push(this.state.songBank[orderedSongIndices[i]]);\n        panels[i].first = i === 0;\n        panels[i].last = i === this.state.songDifficulty - 1;\n      }\n\n      this.setState({\n        orderedSongIndices,\n        panels\n      });\n    };\n\n    this.shuffleIndices = indices => {\n      let currIdx = indices.length,\n          randIdx;\n\n      while (currIdx !== 0) {\n        randIdx = Math.floor(Math.random() * currIdx);\n        currIdx--; // And swap it with the current element.\n\n        [indices[currIdx], indices[randIdx]] = [indices[currIdx], indices[currIdx]];\n      }\n\n      return indices;\n    };\n\n    axios.get(\"http://localhost:8080/\").then(res => {\n      if (res.status == 200) {\n        this.setState({\n          backendActive: true,\n          backendReady: true,\n          songBank: res.data\n        });\n        this.handleSongLoad();\n      }\n    }).catch(error => {\n      if (error.request.status === 0) {\n        // Backend server is not being detected\n        this.setState({\n          backendActive: false,\n          backendReady: false\n        });\n      } else {\n        // Backend server is active but is likely sending back 425, since web scraper is not finished\n        if (error.response.status === 425) {\n          this.setState({\n            backendActive: true,\n            backendReady: false\n          });\n        } else {\n          this.setState({\n            backendActive: false,\n            backendReady: false\n          });\n        }\n      }\n    });\n  }\n\n  render() {\n    if (!this.state.backendActive || !this.state.backendReady) {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {\n          songDifficulty: this.state.songDifficulty,\n          onDifficulty: this.handleDifficulty,\n          currScore: this.state.currScore,\n          highScore: this.state.highScore,\n          onReset: this.handleReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(Loading, {\n            backendActive: this.state.backendActive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {\n          songDifficulty: this.state.songDifficulty,\n          onDifficulty: this.handleDifficulty,\n          currScore: this.state.currScore,\n          highScore: this.state.highScore,\n          onReset: this.handleReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(SongDashboard, {\n            panels: this.state.panels,\n            onMove: this.handleMove\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/akothapalli/Documents/ChangePlusPlus/change-coding-challenge-2021-abi-kothapalli/frontend/src/App.js"],"names":["React","Component","NavBar","Loading","SongDashboard","axios","App","constructor","state","backendActive","backendReady","songDifficulty","currScore","highScore","panels","title","artist","picture","first","last","songBank","orderedSongIndices","handleDifficulty","delta","setState","handleMove","song","up","console","log","newPanels","idx","indexOf","length","handleReset","handleSongLoad","songIndices","Array","fill","map","_","index","shuffleIndices","i","push","indices","currIdx","randIdx","Math","floor","random","get","then","res","status","data","catch","error","request","response","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport NavBar from \"./components/navbar\";\nimport Loading from \"./components/loading\";\nimport SongDashboard from \"./components/songDashboard\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n    state = {\n        backendActive: false,\n        backendReady: false,\n        songDifficulty: 3,\n        currScore: 0,\n        highScore: 0,\n        panels: [\n            {\n                title: \"Way 2 Sexy\",\n                artist: \"Drake Featuring Future & Young Thug\",\n                picture:\n                    \"https://charts-static.billboard.com/img/2021/09/drake-p3d-way-2-sexy-hhn-155x155.jpg\",\n                first: true,\n                last: false,\n            },\n            {\n                title: \"Bad Habits\",\n                artist: \"Ed Sheeran\",\n                picture:\n                    \"https://charts-static.billboard.com/img/2021/07/ed-sheeran-tiy-bad-habits-fce-155x155.jpg\",\n                first: false,\n                last: false,\n            },\n            {\n                title: \"Stay\",\n                artist: \"The Kid LAROI & Justin Bieber\",\n                picture:\n                    \"https://charts-static.billboard.com/img/2021/07/the-kid-laroi-qev-stay-ens-155x155.jpg\",\n                first: false,\n                last: true,\n            },\n        ],\n        songBank: [],\n        orderedSongIndices: [],\n    };\n\n    handleDifficulty = (delta) => {\n        const songDifficulty = this.state.songDifficulty + delta;\n        this.setState({ songDifficulty });\n    };\n\n    handleMove = (song, up) => {\n        console.log(\"Detected\");\n        let newPanels = [...this.state.panels];\n        const idx = newPanels.indexOf(song);\n        if (up) {\n            newPanels[idx - 1] = { ...song };\n            newPanels[idx] = { ...this.state.panels[idx - 1] };\n\n            if (idx === 1) {\n                newPanels[idx - 1].first = true;\n                newPanels[idx].first = false;\n            }\n\n            if (idx === newPanels.length - 1) {\n                newPanels[idx - 1].last = false;\n                newPanels[idx].last = true;\n            }\n        } else {\n            newPanels[idx + 1] = { ...song };\n            newPanels[idx] = { ...this.state.panels[idx + 1] };\n\n            if (idx === 0) {\n                newPanels[idx + 1].first = false;\n                newPanels[idx].first = true;\n            }\n\n            if (idx === newPanels.length - 2) {\n                newPanels[idx + 1].last = true;\n                newPanels[idx].last = false;\n            }\n        }\n        this.setState({ panels: newPanels });\n    };\n\n    handleReset = () => {\n        const songDifficulty = 3;\n        const currScore = 0;\n        const highScore = 0;\n\n        this.setState({ songDifficulty, currScore, highScore });\n    };\n\n    handleSongLoad = () => {\n        // Randomize song list\n        // Add panel for first {songDifficulty} songs\n        // Update state\n        let songIndices = [...Array(100)].fill().map((_, index) => index);\n        let orderedSongIndices = this.shuffleIndices(songIndices);\n        console.log(songIndices);\n        let panels = [];\n        for (let i = 0; i < this.state.songDifficulty; i++) {\n            panels.push(this.state.songBank[orderedSongIndices[i]]);\n            panels[i].first = i === 0;\n            panels[i].last = i === this.state.songDifficulty - 1;\n        }\n        this.setState({ orderedSongIndices, panels });\n    };\n\n    shuffleIndices = (indices) => {\n        let currIdx = indices.length,\n            randIdx;\n\n        while (currIdx !== 0) {\n            randIdx = Math.floor(Math.random() * currIdx);\n            currIdx--;\n\n            // And swap it with the current element.\n            [indices[currIdx], indices[randIdx]] = [\n                indices[currIdx],\n                indices[currIdx],\n            ];\n        }\n\n        return indices;\n    };\n\n    constructor() {\n        super();\n        axios\n            .get(\"http://localhost:8080/\")\n            .then((res) => {\n                if (res.status == 200) {\n                    this.setState({\n                        backendActive: true,\n                        backendReady: true,\n                        songBank: res.data,\n                    });\n                    this.handleSongLoad();\n                }\n            })\n            .catch((error) => {\n                if (error.request.status === 0) {\n                    // Backend server is not being detected\n                    this.setState({\n                        backendActive: false,\n                        backendReady: false,\n                    });\n                } else {\n                    // Backend server is active but is likely sending back 425, since web scraper is not finished\n                    if (error.response.status === 425) {\n                        this.setState({\n                            backendActive: true,\n                            backendReady: false,\n                        });\n                    } else {\n                        this.setState({\n                            backendActive: false,\n                            backendReady: false,\n                        });\n                    }\n                }\n            });\n    }\n\n    render() {\n        if (!this.state.backendActive || !this.state.backendReady) {\n            return (\n                <React.Fragment>\n                    <NavBar\n                        songDifficulty={this.state.songDifficulty}\n                        onDifficulty={this.handleDifficulty}\n                        currScore={this.state.currScore}\n                        highScore={this.state.highScore}\n                        onReset={this.handleReset}\n                    />\n                    <main className=\"container\">\n                        <Loading backendActive={this.state.backendActive} />\n                    </main>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <NavBar\n                        songDifficulty={this.state.songDifficulty}\n                        onDifficulty={this.handleDifficulty}\n                        currScore={this.state.currScore}\n                        highScore={this.state.highScore}\n                        onReset={this.handleReset}\n                    />\n                    <main className=\"container\">\n                        <SongDashboard\n                            panels={this.state.panels}\n                            onMove={this.handleMove}\n                        />\n                    </main>\n                </React.Fragment>\n            );\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}